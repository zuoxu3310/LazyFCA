{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b99f8523",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing libraries\n",
    "# Data analysis and exploration\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import random as rnd\n",
    "\n",
    "# Visualization\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "# Machine learning models\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC, LinearSVC\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.linear_model import Perceptron\n",
    "from sklearn.linear_model import SGDClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ae6342e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get data, training set train_df, test set test_df, merge set combine (to facilitate uniform processing of features: for df in combine:)\n",
    "train_df = pd.read_csv('train.csv')\n",
    "test_df = pd.read_csv('test.csv')\n",
    "combine = [train_df, test_df]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0cffc730",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bafe68f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "397a4882",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891</td>\n",
       "      <td>891</td>\n",
       "      <td>891</td>\n",
       "      <td>204</td>\n",
       "      <td>889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>891</td>\n",
       "      <td>2</td>\n",
       "      <td>681</td>\n",
       "      <td>147</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>347082</td>\n",
       "      <td>B96 B98</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>577</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Name   Sex  Ticket    Cabin Embarked\n",
       "count                       891   891     891      204      889\n",
       "unique                      891     2     681      147        3\n",
       "top     Braund, Mr. Owen Harris  male  347082  B96 B98        S\n",
       "freq                          1   577       7        4      644"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.describe(include=[\"O\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "cfe80bea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.629630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.472826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0.242363</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Pclass  Survived\n",
       "0       1  0.629630\n",
       "1       2  0.472826\n",
       "2       3  0.242363"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6ea1321d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>female</td>\n",
       "      <td>0.742038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>male</td>\n",
       "      <td>0.188908</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Sex  Survived\n",
       "0  female  0.742038\n",
       "1    male  0.188908"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)\n",
    "# Gender and survival are strongly correlated, with female users having a significantly higher survival rate than males\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ef438a9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.535885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.345395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0.166667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>8</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SibSp  Survived\n",
       "1      1  0.535885\n",
       "2      2  0.464286\n",
       "0      0  0.345395\n",
       "3      3  0.250000\n",
       "4      4  0.166667\n",
       "5      5  0.000000\n",
       "6      8  0.000000"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)\n",
    "# The chances of surviving with 0 to 2 siblings or spouses are higher than with more"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4a336ea4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Parch</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.550847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.343658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Parch  Survived\n",
       "3      3  0.600000\n",
       "1      1  0.550847\n",
       "2      2  0.500000\n",
       "0      0  0.343658\n",
       "5      5  0.200000\n",
       "4      4  0.000000\n",
       "6      6  0.000000"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index = False).mean().sort_values(by=\"Survived\",ascending=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bd2d99bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x138d977f0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAk0AAAEiCAYAAADksOZKAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAjR0lEQVR4nO3df1RUdf7H8RcIDBgyCCVoQmq1UpkWmDqmrRlG5pqu1KZrpeVmtfiT3fzxdbOtzeDUKa1df7Qd1Go1zUrTMtsWlbIglZJSCy3pwK6ClQJqMaB8vn/sabYJf9yBGYYfz8c595zm/nx/jHmf19x7506AMcYIAAAAZxXo7wIAAACaA0ITAACABYQmAAAACwhNAAAAFhCaAAAALCA0AQAAWEBoAgAAsIDQBAAAYAGhCQAAwAJCExrN1q1bFRAQoPLycp8eZ/z48Ro5cqRPjwGg6aHHwNcITa3MN998owceeEDx8fGy2WyKjY1VSkqKPvjgA58fu3///jp06JDsdrvPj+Vrn376qQYOHKjQ0FDFxcXpiSee8HdJQJNAj2m4qqoqjR8/XldeeaWCgoIIaE1IkL8LQONKTU1VdXW1XnjhBXXr1k1lZWXKzs7Wd999V+99GmN06tQpBQWd/c8pJCREsbGx9T5OU1FZWakbb7xRycnJWrJkiT777DPdc889ioyM1MSJE/1dHuBX9JiGO3XqlMLCwjRlyhS99tpr/i4HP2XQahw9etRIMlu3bj3jOkVFRUaS+eSTT+pst2XLFmOMMVu2bDGSzMaNG01iYqIJDg42zz33nJFkPv/8c7f9Pf3006Zbt25u2x09etRUVFSY0NBQs3HjRrf1X3/9dRMeHm5OnDhhjDGmuLjY3HbbbcZut5v27dubW265xRQVFbnWP3nypJk+fbqx2+0mKirKPPjgg+auu+4yI0aMqP8/1DksWrTItG/f3jidTte8mTNnmu7du/vsmEBzQI/xvnHjxjXasXBuXJ5rRcLDwxUeHq5169bJ6XQ2eH+zZs1SZmamPv/8c916663q3bu3VqxY4bbOihUr9Nvf/rbOthEREfrVr36llStX1ll/5MiRatu2rWpqapSSkqJ27drp/fff1wcffKDw8HDddNNNqq6uliQ99dRTWr58uZYuXapt27bpyJEjWrt27VnrLi4udv1bnGl6/PHHz7h9bm6urrvuOoWEhLjmpaSkqLCwUEePHj3nvxvQUtFj/quhPQZNmL9TGxrXq6++atq3b29CQ0NN//79zezZs01BQYFruSefAtetW+e27/nz55uLL77Y9bqwsNDtk+FPPwUaY8zatWvdPvH9+Mnw7bffNsYY89JLL5nu3bub2tpa1z6dTqcJCwsz77zzjjHGmI4dO5onnnjCtbympsZ07tz5rJ/MampqzP79+886fffdd2fcfsiQIWbixIlu8/bs2WMkmb17955xO6A1oMc0vMf8FGeamhbONLUyqampOnjwoNavX6+bbrpJW7duVWJiopYvX+7xvnr37u32evTo0fr666+Vl5cn6b+f6BITE5WQkHDa7W+++WYFBwdr/fr1kqTXXntNERERSk5OliQVFBToyy+/VLt27VyfzqKiolRVVaWvvvpKFRUVOnTokPr27evaZ1BQUJ26fi4oKEiXXHLJWaeoqCiP/z0A0GN+XIce0zIRmlqh0NBQDRkyRA899JA+/PBDjR8/Xg8//LAkKTDwv38SxhjX+jU1Nafdz3nnnef2OjY2VoMHD3adDl+5cqXGjh17xjpCQkJ06623uq1/++23u272PH78uJKSkrRr1y63ad++fac9HW9VQ0+dx8bGqqyszG3ej69bwk2oQEPRY7g811Lx7Tno8ssv17p16yRJF1xwgSTp0KFDuvrqqyVJu3btsryvsWPHasaMGRozZowOHDig0aNHn3P9IUOGaM+ePdq8ebMee+wx17LExEStXr1aHTp0UERExGm379ixoz766CNdd911kqSTJ08qPz9fiYmJZzxmp06dzjmms30KdDgcmjNnjmpqahQcHCxJevfdd9W9e3e1b9/+rPsFWiN6TF2caWqm/H19EI3n22+/Nddff7156aWXTEFBgTlw4IB55ZVXTExMjLnnnntc6/Xr188MHDjQ7N2712zdutX06dPntPcb/HjfwE9VVlaasLAw06tXL3PDDTe4LTvddrW1tSYuLs706tXL7V4FY4w5ceKEufTSS82gQYPMe++9Zw4cOGC2bNliJk+ebEpKSowxxmRmZpqoqCizdu1a8/nnn5t7773XtGvXzqf3AJSXl5uYmBhz5513mt27d5tVq1aZtm3bmueee85nxwSaA3qM9+zZs8d88sknZvjw4WbQoEHmk08+cbsPDP5BaGpFqqqqzKxZs0xiYqKx2+2m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\n",
      "text/plain": [
       "<Figure size 600x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.FacetGrid(train_df,col=\"Survived\")\n",
    "g.map(plt.hist,\"Age\",bins=20)\n",
    "# Greater chance of survival for babies and young children\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0d3bcc29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x138f5a3d0>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Fare\n",
    "g = sns.FacetGrid(train_df,col=\"Survived\")\n",
    "g.map(plt.hist,\"Fare\",bins=10)\n",
    "# Low chance of survival for the cheapest ticket\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "903cc85e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Feature that tells whether a passenger had a cabin on the Titanic\n",
    "train_df['HasCabin'] = train_df[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)\n",
    "test_df['HasCabin'] = test_df[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ca445d96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(891, 11) (418, 10) (891, 11) (418, 10)\n"
     ]
    }
   ],
   "source": [
    "# Remove the features Ticket (no human judgement correlation) and Cabin (too little valid data)\n",
    "train_df = train_df.drop([\"Ticket\",\"Cabin\"],axis=1)\n",
    "test_df = test_df.drop([\"Ticket\",\"Cabin\"],axis=1)\n",
    "combine = [train_df,test_df]\n",
    "print(train_df.shape,test_df.shape,combine[0].shape,combine[1].shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6bf919c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Sex</th>\n",
       "      <th>female</th>\n",
       "      <th>male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mr</th>\n",
       "      <td>0</td>\n",
       "      <td>517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Master</th>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dr</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rev</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Col</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Major</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Capt</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Don</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jonkheer</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sir</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Miss</th>\n",
       "      <td>182</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mrs</th>\n",
       "      <td>125</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mlle</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Countess</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lady</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mme</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ms</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Sex       female  male\n",
       "Title                 \n",
       "Mr             0   517\n",
       "Master         0    40\n",
       "Dr             1     6\n",
       "Rev            0     6\n",
       "Col            0     2\n",
       "Major          0     2\n",
       "Capt           0     1\n",
       "Don            0     1\n",
       "Jonkheer       0     1\n",
       "Sir            0     1\n",
       "Miss         182     0\n",
       "Mrs          125     0\n",
       "Mlle           2     0\n",
       "Countess       1     0\n",
       "Lady           1     0\n",
       "Mme            1     0\n",
       "Ms             1     0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for dataset in combine:\n",
    "    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n",
    "pd.crosstab(train_df['Title'], train_df['Sex']).sort_values(by=[\"male\",\"female\"],ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e0d589f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Categorise titles as Mr,Miss,Mrs,Master,Rare_Male,Rare_Female (with Rare differentiated by male and female)\n",
    "for dataset in combine:\n",
    "    dataset[\"Title\"] = dataset[\"Title\"].replace(['Lady', 'Countess', 'Dona'],\"Rare_Female\")\n",
    "    dataset[\"Title\"] = dataset[\"Title\"].replace(['Capt', 'Col','Don','Dr','Major',\n",
    "                                                 'Rev','Sir','Jonkheer',],\"Rare_Male\")\n",
    "    dataset[\"Title\"] = dataset[\"Title\"].replace('Mlle', 'Miss') \n",
    "    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n",
    "    dataset['Title'] = dataset['Title'].replace('Mme', 'Miss')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "84f9011b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Master</td>\n",
       "      <td>0.575000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Miss</td>\n",
       "      <td>0.704301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mr</td>\n",
       "      <td>0.156673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mrs</td>\n",
       "      <td>0.792000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Rare_Female</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Rare_Male</td>\n",
       "      <td>0.285714</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Title  Survived\n",
       "0       Master  0.575000\n",
       "1         Miss  0.704301\n",
       "2           Mr  0.156673\n",
       "3          Mrs  0.792000\n",
       "4  Rare_Female  1.000000\n",
       "5    Rare_Male  0.285714"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Summarize Survived Means by Title to see correlation\n",
    "train_df[[\"Title\",\"Survived\"]].groupby([\"Title\"],as_index=False).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f449139d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch     Fare Embarked  HasCabin  Title  \n",
       "0      0   7.2500        S         0      1  \n",
       "1      0  71.2833        C         1      3  \n",
       "2      0   7.9250        S         0      2  \n",
       "3      0  53.1000        S         1      3  \n",
       "4      0   8.0500        S         0      1  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Title features mapped to values\n",
    "title_mapping = {\"Mr\":1,\"Miss\":2,\"Mrs\":3,\"Master\":4,\"Rare_Female\":5,\"Rare_Male\":6}\n",
    "for dataset in combine:\n",
    "    dataset[\"Title\"] = dataset[\"Title\"].map(title_mapping)\n",
    "    dataset[\"Title\"] = dataset[\"Title\"].fillna(0)\n",
    "    # To avoid routine operations with empty data\n",
    "train_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3970ba3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Name field can be eliminated\n",
    "# The PassengerId field in the training set is only self-incrementing, not relevant to prediction, and can be eliminated\n",
    "train_df = train_df.drop([\"Name\",\"PassengerId\"],axis=1)\n",
    "test_df = test_df.drop([\"Name\"],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e7a232ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((891, 10), (418, 10))"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Recombine each time a feature is deleted\n",
    "combine = [train_df,test_df]\n",
    "combine[0].shape,combine[1].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f744fa1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex   Age  SibSp  Parch     Fare Embarked  HasCabin  \\\n",
       "0         0       3    0  22.0      1      0   7.2500        S         0   \n",
       "1         1       1    1  38.0      1      0  71.2833        C         1   \n",
       "2         1       3    1  26.0      0      0   7.9250        S         0   \n",
       "3         1       1    1  35.0      1      0  53.1000        S         1   \n",
       "4         0       3    0  35.0      0      0   8.0500        S         0   \n",
       "\n",
       "   Title  \n",
       "0      1  \n",
       "1      3  \n",
       "2      2  \n",
       "3      3  \n",
       "4      1  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sex features mapped to values\n",
    "for dataset in combine:\n",
    "    dataset[\"Sex\"] = dataset[\"Sex\"].map({\"female\":1,\"male\":0}).astype(int)\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9503455b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1390ed370>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x1800 with 18 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Predictive supplementation for null values in the Age field\n",
    "# Take the median age of the same Pclass and Title for supplementation (Demo for Pclass and Sex)\n",
    "\n",
    "grid = sns.FacetGrid(train_df,col=\"Pclass\",row=\"Title\")\n",
    "grid.map(plt.hist,\"Age\",bins=20)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "bd90a156",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0., 0., 0.],\n",
       "       [0., 0., 0.],\n",
       "       [0., 0., 0.],\n",
       "       [0., 0., 0.],\n",
       "       [0., 0., 0.],\n",
       "       [0., 0., 0.]])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "guess_ages = np.zeros((6,3))\n",
    "guess_ages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "09565887",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0 40.0 30.0 40.0\n",
      "0 1 31.0 30.0 31.0\n",
      "0 2 26.0 30.0 26.0\n",
      "1 0 29.5 21.5 29.5\n",
      "1 1 24.0 21.5 24.0\n",
      "1 2 18.0 21.5 18.0\n",
      "2 0 41.5 35.0 41.5\n",
      "2 1 32.0 35.0 32.0\n",
      "2 2 31.0 35.0 31.0\n",
      "3 0 4.0 3.5 4.0\n",
      "3 1 1.0 3.5 1.0\n",
      "3 2 4.0 3.5 4.0\n",
      "4 0 40.5 40.5 40.5\n",
      "4 1 nan 40.5 40.5\n",
      "4 2 nan 40.5 40.5\n",
      "5 0 49.0 49.0 49.0\n",
      "5 1 46.5 49.0 46.5\n",
      "5 2 nan 49.0 49.0\n",
      "0 0 42.0 28.5 42.0\n",
      "0 1 28.0 28.5 28.0\n",
      "0 2 25.0 28.5 25.0\n",
      "1 0 32.0 22.0 32.0\n",
      "1 1 19.5 22.0 19.5\n",
      "1 2 22.0 22.0 22.0\n",
      "2 0 48.0 36.5 48.0\n",
      "2 1 29.0 36.5 29.0\n",
      "2 2 28.0 36.5 28.0\n",
      "3 0 9.5 7.0 9.5\n",
      "3 1 5.0 7.0 5.0\n",
      "3 2 7.0 7.0 7.0\n",
      "4 0 39.0 39.0 39.0\n",
      "4 1 nan 39.0 39.0\n",
      "4 2 nan 39.0 39.0\n",
      "5 0 53.0 47.0 53.0\n",
      "5 1 35.5 47.0 35.5\n",
      "5 2 nan 47.0 47.0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  HasCabin  Title\n",
       "0         0       3    0   22      1      0   7.2500        S         0      1\n",
       "1         1       1    1   38      1      0  71.2833        C         1      3\n",
       "2         1       3    1   26      0      0   7.9250        S         0      2\n",
       "3         1       1    1   35      1      0  53.1000        S         1      3\n",
       "4         0       3    0   35      0      0   8.0500        S         0      1"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Populate valuation with empty values for the age field\n",
    "# Use the median Age of the same Pclass and Title instead (for combinations where the median is empty, use the median of the Title as a whole instead)\n",
    "\n",
    "\n",
    "for dataset in combine:\n",
    "    # Take the median of the 6 combinations\n",
    "    for i in range(0, 6):\n",
    "        \n",
    "        for j in range(0, 3):\n",
    "            guess_title_df = dataset[dataset[\"Title\"]==i+1][\"Age\"].dropna()\n",
    "            \n",
    "            guess_df = dataset[(dataset['Title'] == i+1) & (dataset['Pclass'] == j+1)]['Age'].dropna()\n",
    "            \n",
    "            # age_mean = guess_df.mean()\n",
    "            # age_std = guess_df.std()\n",
    "            # age_guess = rnd.uniform(age_mean - age_std, age_mean + age_std)\n",
    "            age_guess = guess_df.median() if ~np.isnan(guess_df.median()) else guess_title_df.median()\n",
    "            print(i,j,guess_df.median(),guess_title_df.median(),age_guess)\n",
    "            # Convert random age float to nearest .5 age\n",
    "            guess_ages[i,j] = int( age_guess/0.5 + 0.5 ) * 0.5\n",
    "    # Assign a value to the Age field that satisfies all 6 cases\n",
    "    for i in range(0, 6):\n",
    "        for j in range(0, 3):\n",
    "            dataset.loc[ (dataset.Age.isnull()) & (dataset.Title == i+1) & (dataset.Pclass == j+1),\n",
    "                        'Age'] = guess_ages[i,j]\n",
    "\n",
    "    dataset['Age'] = dataset['Age'].astype(int)\n",
    "\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "043f268f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  HasCabin  \\\n",
       "0         0       3    0   22      1      0   7.2500        S         0   \n",
       "1         1       1    1   38      1      0  71.2833        C         1   \n",
       "2         1       3    1   26      0      0   7.9250        S         0   \n",
       "3         1       1    1   35      1      0  53.1000        S         1   \n",
       "4         0       3    0   35      0      0   8.0500        S         0   \n",
       "\n",
       "   Title  IsChildren  \n",
       "0      1         0.0  \n",
       "1      3         0.0  \n",
       "2      2         0.0  \n",
       "3      3         0.0  \n",
       "4      1         0.0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create whether child characteristics\n",
    "for dataset in combine:\n",
    "    dataset.loc[dataset[\"Age\"] > 12,\"IsChildren\"] = 0\n",
    "    dataset.loc[dataset[\"Age\"] <= 12,\"IsChildren\"] = 1\n",
    "train_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9c0866b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AgeBand</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>(-0.001, 17.0]</td>\n",
       "      <td>0.538462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>(17.0, 21.0]</td>\n",
       "      <td>0.362903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>(21.0, 25.0]</td>\n",
       "      <td>0.393939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>(25.0, 26.0]</td>\n",
       "      <td>0.120370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>(26.0, 31.0]</td>\n",
       "      <td>0.414062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>(31.0, 36.5]</td>\n",
       "      <td>0.478261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>(36.5, 45.0]</td>\n",
       "      <td>0.388430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>(45.0, 80.0]</td>\n",
       "      <td>0.372549</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          AgeBand  Survived\n",
       "0  (-0.001, 17.0]  0.538462\n",
       "1    (17.0, 21.0]  0.362903\n",
       "2    (21.0, 25.0]  0.393939\n",
       "3    (25.0, 26.0]  0.120370\n",
       "4    (26.0, 31.0]  0.414062\n",
       "5    (31.0, 36.5]  0.478261\n",
       "6    (36.5, 45.0]  0.388430\n",
       "7    (45.0, 80.0]  0.372549"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create age interval features\n",
    "# pd.cut is a uniform cut by the size of the value, each set of value intervals is the same size, but the number of samples may not be the same\n",
    "# pd.qcut is cut by frequency of distribution of samples over values, same number of samples per group\n",
    "train_df[\"AgeBand\"] = pd.qcut(train_df[\"Age\"],8)\n",
    "train_df[[\"AgeBand\",\"Survived\"]].groupby([\"AgeBand\"],as_index = False).mean().sort_values(by=\"AgeBand\",ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "21995a24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "      <th>AgeBand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>(21.0, 25.0]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>(36.5, 45.0]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>(25.0, 26.0]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>(31.0, 36.5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>(31.0, 36.5]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  HasCabin  \\\n",
       "0         0       3    0    1      1      0   7.2500        S         0   \n",
       "1         1       1    1    1      1      0  71.2833        C         1   \n",
       "2         1       3    1    0      0      0   7.9250        S         0   \n",
       "3         1       1    1    2      1      0  53.1000        S         1   \n",
       "4         0       3    0    2      0      0   8.0500        S         0   \n",
       "\n",
       "   Title  IsChildren       AgeBand  \n",
       "0      1         0.0  (21.0, 25.0]  \n",
       "1      3         0.0  (36.5, 45.0]  \n",
       "2      2         0.0  (25.0, 26.0]  \n",
       "3      3         0.0  (31.0, 36.5]  \n",
       "4      1         0.0  (31.0, 36.5]  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for dataset in combine:    \n",
    "    dataset.loc[ dataset['Age'] <= 17, 'Age'] = 2\n",
    "    dataset.loc[(dataset['Age'] > 17) & (dataset['Age'] <= 21), 'Age'] = 1\n",
    "    dataset.loc[(dataset['Age'] > 21) & (dataset['Age'] <= 25), 'Age'] = 1\n",
    "    dataset.loc[(dataset['Age'] > 25) & (dataset['Age'] <= 26), 'Age'] = 0\n",
    "    dataset.loc[(dataset['Age'] > 26) & (dataset['Age'] <= 31), 'Age'] = 1\n",
    "    dataset.loc[(dataset['Age'] > 31) & (dataset['Age'] <= 36.5), 'Age'] = 2\n",
    "    dataset.loc[(dataset['Age'] > 36.5) & (dataset['Age'] <= 45), 'Age'] = 1\n",
    "    dataset.loc[ dataset['Age'] > 45, 'Age'] = 1\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d8968fe6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  HasCabin  \\\n",
       "0         0       3    0    1      1      0   7.2500        S         0   \n",
       "1         1       1    1    1      1      0  71.2833        C         1   \n",
       "2         1       3    1    0      0      0   7.9250        S         0   \n",
       "3         1       1    1    2      1      0  53.1000        S         1   \n",
       "4         0       3    0    2      0      0   8.0500        S         0   \n",
       "\n",
       "   Title  IsChildren  \n",
       "0      1         0.0  \n",
       "1      3         0.0  \n",
       "2      2         0.0  \n",
       "3      3         0.0  \n",
       "4      1         0.0  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Remove AgeBand features\n",
    "train_df = train_df.drop([\"AgeBand\"],axis=1)\n",
    "combine = [train_df,test_df]\n",
    "train_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "14e32f28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.303538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.552795</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0.578431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>0.724138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>0.136364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>11</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   FamilySize  Survived\n",
       "0           1  0.303538\n",
       "1           2  0.552795\n",
       "2           3  0.578431\n",
       "3           4  0.724138\n",
       "4           5  0.200000\n",
       "5           6  0.136364\n",
       "6           7  0.333333\n",
       "7           8  0.000000\n",
       "8          11  0.000000"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for dataset in combine:\n",
    "    dataset[\"FamilySize\"] = dataset[\"Parch\"] + dataset[\"SibSp\"] + 1\n",
    "train_df[[\"FamilySize\",\"Survived\"]].groupby([\"FamilySize\"],as_index = False).mean().sort_values(by=\"FamilySize\",ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "5ae3fbed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>IsAlone</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.505650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.303538</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   IsAlone  Survived\n",
       "0        0  0.505650\n",
       "1        1  0.303538"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create whether the IsAlone feature is alone\n",
    "for dataset in combine:\n",
    "    dataset[\"IsAlone\"] = 0\n",
    "    dataset.loc[dataset[\"FamilySize\"] == 1,\"IsAlone\"] = 1\n",
    "train_df[[\"IsAlone\",\"Survived\"]].groupby([\"IsAlone\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "1d521a28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>IsAlone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  HasCabin  \\\n",
       "0         0       3    0    1      1      0   7.2500        S         0   \n",
       "1         1       1    1    1      1      0  71.2833        C         1   \n",
       "2         1       3    1    0      0      0   7.9250        S         0   \n",
       "3         1       1    1    2      1      0  53.1000        S         1   \n",
       "4         0       3    0    2      0      0   8.0500        S         0   \n",
       "\n",
       "   Title  IsChildren  FamilySize  IsAlone  \n",
       "0      1         0.0           3        0  \n",
       "1      3         0.0           3        0  \n",
       "2      2         0.0           3        1  \n",
       "3      3         0.0           3        0  \n",
       "4      1         0.0           3        1  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for dataset in combine:    \n",
    "    dataset.loc[ dataset['FamilySize'] == 1, 'FamilySize'] = 2\n",
    "    dataset.loc[ dataset['FamilySize'] == 2, 'FamilySize'] = 3\n",
    "    dataset.loc[ dataset['FamilySize'] == 3, 'FamilySize'] = 3\n",
    "    dataset.loc[ dataset['FamilySize'] == 4, 'FamilySize'] = 4\n",
    "    dataset.loc[ dataset['FamilySize'] == 5, 'FamilySize'] = 1\n",
    "    dataset.loc[ dataset['FamilySize'] == 6, 'FamilySize'] = 0\n",
    "    dataset.loc[ dataset['FamilySize'] == 7, 'FamilySize'] = 1\n",
    "    dataset.loc[ dataset['FamilySize'] == 8, 'FamilySize'] = 0\n",
    "    dataset.loc[ dataset['FamilySize'] == 11, 'FamilySize'] = 0\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "521596cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>IsAlone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age     Fare Embarked  HasCabin  Title  IsChildren  \\\n",
       "0         0       3    0    1   7.2500        S         0      1         0.0   \n",
       "1         1       1    1    1  71.2833        C         1      3         0.0   \n",
       "2         1       3    1    0   7.9250        S         0      2         0.0   \n",
       "3         1       1    1    2  53.1000        S         1      3         0.0   \n",
       "4         0       3    0    2   8.0500        S         0      1         0.0   \n",
       "\n",
       "   FamilySize  IsAlone  \n",
       "0           3        0  \n",
       "1           3        0  \n",
       "2           3        1  \n",
       "3           3        0  \n",
       "4           3        1  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Remove Parch,Sibsp\n",
    "# Assign a value to a field can be looped in the combine, delete a field can not, you need to operate on the specified df\n",
    "train_df = train_df.drop([\"Parch\",\"SibSp\"],axis=1)\n",
    "test_df = test_df.drop([\"Parch\",\"SibSp\"],axis=1)\n",
    "combine = [train_df,test_df]\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "cd2a81d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C</td>\n",
       "      <td>0.553571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q</td>\n",
       "      <td>0.389610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>S</td>\n",
       "      <td>0.339009</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Embarked  Survived\n",
       "0        C  0.553571\n",
       "1        Q  0.389610\n",
       "2        S  0.339009"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "freq_port = train_df[\"Embarked\"].dropna().mode()[0]\n",
    "for dataset in combine:\n",
    "    dataset[\"Embarked\"] = dataset[\"Embarked\"].fillna(freq_port)\n",
    "train_df[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b440d8eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>IsAlone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age     Fare  Embarked  HasCabin  Title  IsChildren  \\\n",
       "0         0       3    0    1   7.2500         1         0      1         0.0   \n",
       "1         1       1    1    1  71.2833         2         1      3         0.0   \n",
       "2         1       3    1    0   7.9250         1         0      2         0.0   \n",
       "3         1       1    1    2  53.1000         1         1      3         0.0   \n",
       "4         0       3    0    2   8.0500         1         0      1         0.0   \n",
       "\n",
       "   FamilySize  IsAlone  \n",
       "0           3        0  \n",
       "1           3        0  \n",
       "2           3        1  \n",
       "3           3        0  \n",
       "4           3        1  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Digitising Embarked\n",
    "for dataset in combine:\n",
    "    dataset[\"Embarked\"] = dataset[\"Embarked\"].map({\"S\":1,\"C\":2,\"Q\":0}).astype(int)\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "1cd5a631",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 11 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Pclass       418 non-null    int64  \n",
      " 2   Sex          418 non-null    int64  \n",
      " 3   Age          418 non-null    int64  \n",
      " 4   Fare         418 non-null    float64\n",
      " 5   Embarked     418 non-null    int64  \n",
      " 6   HasCabin     418 non-null    int64  \n",
      " 7   Title        418 non-null    int64  \n",
      " 8   IsChildren   418 non-null    float64\n",
      " 9   FamilySize   418 non-null    int64  \n",
      " 10  IsAlone      418 non-null    int64  \n",
      "dtypes: float64(2), int64(9)\n",
      "memory usage: 36.0 KB\n"
     ]
    }
   ],
   "source": [
    "test_df[\"Fare\"].fillna(test_df[\"Fare\"].dropna().median(),inplace=True)\n",
    "test_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "1f3943a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FareBand</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>(-0.001, 7.91]</td>\n",
       "      <td>0.197309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>(7.91, 14.454]</td>\n",
       "      <td>0.303571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>(14.454, 31.0]</td>\n",
       "      <td>0.454955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>(31.0, 512.329]</td>\n",
       "      <td>0.581081</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          FareBand  Survived\n",
       "0   (-0.001, 7.91]  0.197309\n",
       "1   (7.91, 14.454]  0.303571\n",
       "2   (14.454, 31.0]  0.454955\n",
       "3  (31.0, 512.329]  0.581081"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create FareBand interval features\n",
    "train_df[\"FareBand\"] = pd.qcut(train_df[\"Fare\"],4)\n",
    "train_df[[\"FareBand\",\"Survived\"]].groupby([\"FareBand\"],as_index=False).mean().sort_values(by=\"FareBand\",ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "0bacb636",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>IsAlone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  Fare  Embarked  HasCabin  Title  IsChildren  \\\n",
       "0         0       3    0    1     0         1         0      1         0.0   \n",
       "1         1       1    1    1     3         2         1      3         0.0   \n",
       "2         1       3    1    0     1         1         0      2         0.0   \n",
       "3         1       1    1    2     3         1         1      3         0.0   \n",
       "4         0       3    0    2     1         1         0      1         0.0   \n",
       "5         0       3    0    0     1         0         0      1         0.0   \n",
       "6         0       1    0    1     3         1         1      1         0.0   \n",
       "7         0       3    0    2     2         1         0      4         1.0   \n",
       "8         1       3    1    1     1         1         0      3         0.0   \n",
       "9         1       2    1    2     2         2         0      3         0.0   \n",
       "\n",
       "   FamilySize  IsAlone  \n",
       "0           3        0  \n",
       "1           3        0  \n",
       "2           3        1  \n",
       "3           3        0  \n",
       "4           3        1  \n",
       "5           3        1  \n",
       "6           3        1  \n",
       "7           1        0  \n",
       "8           3        0  \n",
       "9           3        0  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert Fare features to ordinal values based on FareBand\n",
    "for dataset in combine:\n",
    "    dataset.loc[ dataset['Fare'] <= 7.91, 'Fare'] = 0\n",
    "    dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare'] = 1\n",
    "    dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']   = 2\n",
    "    dataset.loc[ dataset['Fare'] > 31, 'Fare'] = 3\n",
    "    dataset['Fare'] = dataset['Fare'].astype(int)\n",
    "\n",
    "train_df = train_df.drop(['FareBand'], axis=1)\n",
    "combine = [train_df, test_df]\n",
    "    \n",
    "train_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0f9a2e20",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: title={'center': 'Pearson Correlation of Features'}>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x1200 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize correlations between features with seaborn's heatmap\n",
    "colormap = plt.cm.RdBu\n",
    "plt.figure(figsize=(14,12))\n",
    "plt.title('Pearson Correlation of Features', y=1.05, size=15)\n",
    "sns.heatmap(train_df.astype(float).corr(),linewidths=0.1,vmax=1.0, \n",
    "            square=True, cmap=colormap, linecolor='white', annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3a46df39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>HasCabin</th>\n",
       "      <th>Title</th>\n",
       "      <th>IsChildren</th>\n",
       "      <th>FamilySize</th>\n",
       "      <th>IsAlone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Survived  Pclass  Sex  Age  Fare  Embarked  HasCabin  Title  IsChildren  \\\n",
       "0           0       3    0    1     0         1         0      1         0.0   \n",
       "1           1       1    1    1     3         2         1      3         0.0   \n",
       "2           1       3    1    0     1         1         0      2         0.0   \n",
       "3           1       1    1    2     3         1         1      3         0.0   \n",
       "4           0       3    0    2     1         1         0      1         0.0   \n",
       "..        ...     ...  ...  ...   ...       ...       ...    ...         ...   \n",
       "886         0       2    0    1     1         1         0      6         0.0   \n",
       "887         1       1    1    1     2         1         1      2         0.0   \n",
       "888         0       3    1    1     2         1         0      2         0.0   \n",
       "889         1       1    0    0     2         2         1      1         0.0   \n",
       "890         0       3    0    2     0         0         0      1         0.0   \n",
       "\n",
       "     FamilySize  IsAlone  \n",
       "0             3        0  \n",
       "1             3        0  \n",
       "2             3        1  \n",
       "3             3        0  \n",
       "4             3        1  \n",
       "..          ...      ...  \n",
       "886           3        1  \n",
       "887           3        1  \n",
       "888           4        0  \n",
       "889           3        1  \n",
       "890           3        1  \n",
       "\n",
       "[891 rows x 11 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "008c8f0e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import time\n",
    "from typing import Iterator, List, Collection, Callable\n",
    "\n",
    "import pandas as pd\n",
    "from tqdm import tqdm\n",
    "\n",
    "# A very general type hint for a prediction function.\n",
    "# A prediction function takes a triplet of (test object description, train descriptions, train labels)\n",
    "# and outputs a bool prediction\n",
    "PREDICTION_FUNCTION_HINT = Callable[\n",
    "    [Collection, Collection[Collection], Collection[bool]], bool\n",
    "]\n",
    "\n",
    "\n",
    "def load_data(df_name: str) -> pd.DataFrame:\n",
    "    \"\"\"Generalized function to load datasets in the form of pandas.DataFrame\"\"\"\n",
    "    if df_name == 'tic_tac_toe':\n",
    "        return load_tic_tac_toe()\n",
    "\n",
    "    raise ValueError(f'Unknown dataset name: {df_name}')\n",
    "\n",
    "\n",
    "def load_tic_tac_toe() -> pd.DataFrame:\n",
    "    \"\"\"Load tic-tac-toe dataset from UCI repository\"\"\"\n",
    "    column_names = [\n",
    "        'top-left-square', 'top-middle-square', 'top-right-square',\n",
    "        'middle-left-square', 'middle-middle-square', 'middle-right-square',\n",
    "        'bottom-left-square', 'bottom-middle-square', 'bottom-right-square',\n",
    "        'Class'\n",
    "    ]\n",
    "    url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/tic-tac-toe/tic-tac-toe.data'\n",
    "    df = pd.read_csv(url, names=column_names)\n",
    "    df['Class'] = [x == 'positive' for x in df['Class']]\n",
    "    return df\n",
    "\n",
    "\n",
    "def binarize_X(X: pd.DataFrame) -> 'pd.DataFrame[bool]':\n",
    "    \"\"\"Scale values from X into pandas.DataFrame of binary values\"\"\"\n",
    "    dummies = [pd.get_dummies(X[f], prefix=f, prefix_sep=': ') for f in X.columns]\n",
    "    X_bin = pd.concat(dummies, axis=1).astype(bool)\n",
    "    return X_bin\n",
    "\n",
    "\n",
    "def predict_with_generators(\n",
    "        x: set, X_train: List[set], Y_train: List[bool],\n",
    "        min_cardinality: int = 1\n",
    ") -> bool:\n",
    "    \"\"\"Lazy prediction for ``x`` based on training data ``X_train`` and ``Y_train``\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    x : set\n",
    "        Description to make prediction for\n",
    "    X_train: List[set]\n",
    "        List of training examples\n",
    "    Y_train: List[bool]\n",
    "        List of labels of training examples\n",
    "    min_cardinality: int\n",
    "        Minimal size of an intersection required to count for counterexamples\n",
    "\n",
    "    Returns\n",
    "    -------\n",
    "    prediction: bool\n",
    "        Class prediction for ``x`` (either True or False)\n",
    "    \"\"\"\n",
    "    X_pos = [x_train for x_train, y in zip(X_train, Y_train) if y]\n",
    "    X_neg = [x_train for x_train, y in zip(X_train, Y_train) if not y]\n",
    "\n",
    "    n_counters_pos = 0  # number of counter examples for positive intersections\n",
    "    for x_pos in X_pos:\n",
    "        intersection_pos = x & x_pos\n",
    "        if len(intersection_pos) < min_cardinality:  # the intersection is too small\n",
    "            continue\n",
    "\n",
    "        for x_neg in X_neg:  # count all negative examples that contain intersection_pos\n",
    "            if (intersection_pos & x_neg) == intersection_pos:\n",
    "                n_counters_pos += 1\n",
    "\n",
    "    n_counters_neg = 0  # number of counter examples for negative intersections\n",
    "    for x_neg in X_neg:\n",
    "        intersection_neg = x & x_neg\n",
    "        if len(intersection_neg) < min_cardinality:\n",
    "            continue\n",
    "\n",
    "        for x_pos in X_pos:  # count all positive examples that contain intersection_neg\n",
    "            if (intersection_neg & x_pos) == intersection_neg:\n",
    "                n_counters_neg += 1\n",
    "\n",
    "    perc_counters_pos = n_counters_pos / len(X_pos)\n",
    "    perc_counters_neg = n_counters_neg / len(X_neg)\n",
    "\n",
    "    prediction = perc_counters_pos < perc_counters_neg\n",
    "    return prediction\n",
    "\n",
    "\n",
    "def predict_array(\n",
    "        X: List[set], Y: List[bool],\n",
    "        n_train: int, update_train: bool = True, use_tqdm: bool = False,\n",
    "        predict_func: PREDICTION_FUNCTION_HINT = predict_with_generators\n",
    ") -> Iterator[bool]:\n",
    "    \"\"\"Predict the labels of multiple examples from ``X``\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    X: List[set]\n",
    "        Set of train and test examples to classify represented with subsets of attributes\n",
    "    Y: List[bool]\n",
    "        Set of train and test labels for each example from X\n",
    "    n_train: int\n",
    "        Initial number of train examples. That is, make predictions only for examples from X_train[n_train:]\n",
    "    update_train: bool\n",
    "        A flag whether to consider true labels of predicted examples as training data or not.\n",
    "        If True, then for each X_i the training data consists of X_1, X_2, ..., X_{n_train}, ...,  X_{i-1}.\n",
    "        If False, then for each X_i the training data consists of X_1, X_2, ..., X_{n_train}\n",
    "    use_tqdm: bool\n",
    "        A flag whether to use tqdm progress bar (in case you like progress bars)\n",
    "    predict_func: <see PREDICTION_FUNCTION_HINT defined in this file>\n",
    "        A function to make prediction for each specific example from ``X``.\n",
    "        The default prediction function is ``predict_with_generator`` (considered as baseline for the home work).\n",
    "\n",
    "    Returns\n",
    "    -------\n",
    "    prediction: Iterator\n",
    "        Python generator with predictions for each x in X[n_train:]\n",
    "    \"\"\"\n",
    "    for i, x in tqdm(\n",
    "        enumerate(X[n_train:]),\n",
    "        initial=n_train, total=len(X),\n",
    "        desc='Predicting step by step',\n",
    "        disable=not use_tqdm,\n",
    "    ):\n",
    "        n_trains = n_train + i if update_train else n_train\n",
    "        yield predict_func(x, X[:n_trains], Y[:n_trains])\n",
    "\n",
    "\n",
    "def apply_stopwatch(iterator: Iterator):\n",
    "    \"\"\"Measure run time of each iteration of ``iterator``\n",
    "\n",
    "    The function can be applied e.g. for the output of ``predict_array`` function\n",
    "    \"\"\"\n",
    "    outputs = []\n",
    "    times = []\n",
    "\n",
    "    t_start = time.time()\n",
    "    for out in iterator:\n",
    "        dt = time.time() - t_start\n",
    "        outputs.append(out)\n",
    "        times.append(dt)\n",
    "        t_start = time.time()\n",
    "\n",
    "    return outputs, times\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "69847f0a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(891, 31)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pclass: 1</th>\n",
       "      <th>Pclass: 2</th>\n",
       "      <th>Pclass: 3</th>\n",
       "      <th>Sex: 0</th>\n",
       "      <th>Sex: 1</th>\n",
       "      <th>Age: 0</th>\n",
       "      <th>Age: 1</th>\n",
       "      <th>Age: 2</th>\n",
       "      <th>Fare: 0</th>\n",
       "      <th>Fare: 1</th>\n",
       "      <th>...</th>\n",
       "      <th>Title: 5</th>\n",
       "      <th>Title: 6</th>\n",
       "      <th>IsChildren: 0.0</th>\n",
       "      <th>IsChildren: 1.0</th>\n",
       "      <th>FamilySize: 0</th>\n",
       "      <th>FamilySize: 1</th>\n",
       "      <th>FamilySize: 3</th>\n",
       "      <th>FamilySize: 4</th>\n",
       "      <th>IsAlone: 0</th>\n",
       "      <th>IsAlone: 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Pclass: 1  Pclass: 2  Pclass: 3  Sex: 0  Sex: 1  Age: 0  Age: 1  Age: 2  \\\n",
       "0      False      False       True    True   False   False    True   False   \n",
       "1       True      False      False   False    True   False    True   False   \n",
       "2      False      False       True   False    True    True   False   False   \n",
       "3       True      False      False   False    True   False   False    True   \n",
       "4      False      False       True    True   False   False   False    True   \n",
       "\n",
       "   Fare: 0  Fare: 1  ...  Title: 5  Title: 6  IsChildren: 0.0  \\\n",
       "0     True    False  ...     False     False             True   \n",
       "1    False    False  ...     False     False             True   \n",
       "2    False     True  ...     False     False             True   \n",
       "3    False    False  ...     False     False             True   \n",
       "4    False     True  ...     False     False             True   \n",
       "\n",
       "   IsChildren: 1.0  FamilySize: 0  FamilySize: 1  FamilySize: 3  \\\n",
       "0            False          False          False           True   \n",
       "1            False          False          False           True   \n",
       "2            False          False          False           True   \n",
       "3            False          False          False           True   \n",
       "4            False          False          False           True   \n",
       "\n",
       "   FamilySize: 4  IsAlone: 0  IsAlone: 1  \n",
       "0          False        True       False  \n",
       "1          False        True       False  \n",
       "2          False       False        True  \n",
       "3          False        True       False  \n",
       "4          False       False        True  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_name = 'Survived'\n",
    "y = train_df[y_name]\n",
    "X = binarize_X(train_df.drop(y_name, axis=1))\n",
    "print(X.shape)\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "3fcf9f54",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = X.sample(frac=1, random_state=42)  # Shuffle X\n",
    "y = y[X.index]  # Order y to follow the order of rows from X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "a8948aa8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Age: 2',\n",
       " 'Embarked: 2',\n",
       " 'FamilySize: 3',\n",
       " 'Fare: 2',\n",
       " 'HasCabin: 0',\n",
       " 'IsAlone: 0',\n",
       " 'IsChildren: 1.0',\n",
       " 'Pclass: 3',\n",
       " 'Sex: 0',\n",
       " 'Title: 4'}"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_bin = [set(X.columns[x]) for idx, x in X.iterrows()]\n",
    "X_bin[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "138f4f63",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = y.values.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "e5e5c091",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(89, 802)"
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_train = int(len(X)*0.1)\n",
    "n_test = len(X) - n_train\n",
    "n_train, n_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "5ecde184",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test = y[n_train:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "a3e945ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Predicting step by step: 100%|████████████████| 891/891 [00:19<00:00, 40.20it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 19.9 s, sys: 124 ms, total: 20 s\n",
      "Wall time: 20 s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "gen = predict_array(X_bin, y, n_train, use_tqdm=True)\n",
    "y_preds, t_preds = apply_stopwatch(gen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "3781791f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Predicting step by step: 100%|██████████████| 891/891 [00:00<00:00, 1211.67it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 659 ms, sys: 7.29 ms, total: 666 ms\n",
      "Wall time: 665 ms\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "gen = list(predict_array(X_bin, y, n_train, use_tqdm=True, update_train=False))\n",
    "y_preds_fixedtrain, t_preds_fixedtrain = apply_stopwatch(gen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "9e1220e7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 due to no true nor predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, \"true nor predicted\", \"F-score is\", len(true_sum))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 due to no true nor predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, \"true nor predicted\", \"F-score is\", len(true_sum))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score, f1_score, recall_score, precision_score\n",
    "score_vals = {}\n",
    "for score_f in [accuracy_score, f1_score, recall_score, precision_score]:\n",
    "    score_name = score_f.__name__\n",
    "    preds = y_preds\n",
    "    score_vals[score_name] = [score_f(y_test[:i], preds[:i]) for i in range(1, len(preds))]\n",
    "    \n",
    "    score_name = score_f.__name__ + '_fixedtrain'\n",
    "    preds = y_preds_fixedtrain\n",
    "    score_vals[score_name] = [score_f(y_test[:i], preds[:i]) for i in range(1, len(preds))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "47bb81dc",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x1200 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.rcParams['figure.facecolor'] = (1,1,1,1)  # Replace default \"transparent\" background of the figure with the \"white\" one\n",
    "\n",
    "\n",
    "fig, axs = plt.subplots(2, 3, figsize=(20, 12))\n",
    "\n",
    "# First two plots are for prediction quality comparison\n",
    "for ax, t in zip(axs[0],['accuracy_score', 'f1_score', 'recall_score' , 'precision_score']):\n",
    "    ax.set_ylim(0-0.05, 1+0.05)\n",
    "    ax.plot(range(n_train+1, len(X)), score_vals[t], label='baseline clf.')\n",
    "    ax.plot(range(n_train+1, len(X)), score_vals[t+'_fixedtrain'], label='baseline clf. (fixed train)')\n",
    "    \n",
    "# The third plot is for prediction speed comparison\n",
    "axs[1,0].plot(range(n_train, len(X)), t_preds, label='baseline clf.')\n",
    "axs[1,0].plot(range(n_train, len(X)), t_preds_fixedtrain, label='baseline clf. (fixed train)')\n",
    "\n",
    "# Add labels and titles to the plots\n",
    "for (ax, t_verb, dim) in zip(axs.flatten(), ['Accuracy score', 'F1 score', 'Recall', \"Precision\", 'Prediction time', ], ['','', '', '','(secs.)',]):\n",
    "    ax.set_title('\\n'.join([f\"{t_verb} progression\", \"w.r.t. the number of train examples\"]), loc='left', size=18)\n",
    "    ax.set_xlabel('# of train examples', loc='right', size=14)\n",
    "    ax.set_ylabel(f\"{t_verb} {dim}\".strip(), loc='top', size=14)\n",
    "    ax.legend()\n",
    "    \n",
    "# Drop the predefined fourth plot since we do not use it\n",
    "axs[1,1].set_axis_off()    \n",
    "\n",
    "# Some postprocessing of plots\n",
    "plt.tight_layout()\n",
    "plt.subplots_adjust()\n",
    "\n",
    "plt.savefig('Classifier_comparison.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "ed730dc0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "75.71"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# LazyFCA\n",
    "acc_fca = round(sum(score_vals['accuracy_score'])/len(score_vals['accuracy_score'])*100,2)\n",
    "acc_fca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "832ec388",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "81.7"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pre_fca = round(sum(score_vals['precision_score'])/len(score_vals['precision_score'])*100,2)\n",
    "pre_fca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "b8005923",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "49.07"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rec_fca = round(sum(score_vals['recall_score'])/len(score_vals['recall_score'])*100,2)\n",
    "rec_fca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d1db312",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Rewrite the pipeline with numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "3da727d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict_with_generators1(\n",
    "        x: set, X_train: List[set], Y_train: List[bool],\n",
    "        min_cardinality: int = 1\n",
    ") -> bool:\n",
    "    \"\"\"Lazy prediction for ``x`` based on training data ``X_train`` and ``Y_train``\n",
    "    Parameters\n",
    "    ----------\n",
    "    x : set\n",
    "        Description to make prediction for\n",
    "    X_train: List[set]\n",
    "        List of training examples\n",
    "    Y_train: List[bool]\n",
    "        List of labels of training examples\n",
    "    min_cardinality: int\n",
    "        Minimal size of an intersection required to count for counterexamples\n",
    "    Returns\n",
    "    -------\n",
    "    prediction: bool\n",
    "        Class prediction for ``x`` (either True or False)\n",
    "    \"\"\"\n",
    "    \n",
    "    X_pos = np.array([x_train for x_train, y in zip(np.array(X_train), Y_train) if y])\n",
    "    X_neg = np.array([x_train for x_train, y in zip(np.array(X_train), Y_train) if not y])\n",
    "    n_counters_pos = 0  # number of counter examples for positive intersections\n",
    "    for x_pos in X_pos:\n",
    "        intersection_pos = x & x_pos\n",
    "        if intersection_pos.sum() < min_cardinality:  # the intersection is too small\n",
    "            continue\n",
    "        n_counters_pos += ((intersection_pos & X_neg) == intersection_pos).all(axis=1).sum()\n",
    "\n",
    "    n_counters_neg = 0  # number of counter examples for negative intersections\n",
    "    for x_neg in X_neg:\n",
    "        intersection_neg = x & x_neg\n",
    "        if len(intersection_neg) < min_cardinality:\n",
    "            continue\n",
    "        n_counters_neg += ((intersection_neg & X_pos) == intersection_neg).all(axis=1).sum()\n",
    "\n",
    "    perc_counters_pos = n_counters_pos / len(X_pos)\n",
    "    perc_counters_neg = n_counters_neg / len(X_neg)\n",
    "\n",
    "    prediction = perc_counters_pos < perc_counters_neg\n",
    "    return prediction\n",
    "\n",
    "\n",
    "def predict_array1(\n",
    "        X: List[set], Y: List[bool],\n",
    "        n_train: int, update_train: bool = True, use_tqdm: bool = False,\n",
    "        predict_func: PREDICTION_FUNCTION_HINT = predict_with_generators1\n",
    ") -> Iterator[bool]:\n",
    "    \"\"\"Predict the labels of multiple examples from ``X``\n",
    "    Parameters\n",
    "    ----------\n",
    "    X: List[set]\n",
    "        Set of train and test examples to classify represented with subsets of attributes\n",
    "    Y: List[bool]\n",
    "        Set of train and test labels for each example from X\n",
    "    n_train: int\n",
    "        Initial number of train examples. That is, make predictions only for examples from X_train[n_train:]\n",
    "    update_train: bool\n",
    "        A flag whether to consider true labels of predicted examples as training data or not.\n",
    "        If True, then for each X_i the training data consists of X_1, X_2, ..., X_{n_train}, ...,  X_{i-1}.\n",
    "        If False, then for each X_i the training data consists of X_1, X_2, ..., X_{n_train}\n",
    "    use_tqdm: bool\n",
    "        A flag whether to use tqdm progress bar (in case you like progress bars)\n",
    "    predict_func: <see PREDICTION_FUNCTION_HINT defined in this file>\n",
    "        A function to make prediction for each specific example from ``X``.\n",
    "        The default prediction function is ``predict_with_generator`` (considered as baseline for the home work).\n",
    "    Returns\n",
    "    -------\n",
    "    prediction: Iterator\n",
    "        Python generator with predictions for each x in X[n_train:]\n",
    "    \"\"\"\n",
    "    for i, x in tqdm(\n",
    "        enumerate(np.array(X[n_train:])),\n",
    "        initial=n_train, total=len(X),\n",
    "        desc='Predicting step by step',\n",
    "        disable=not use_tqdm,\n",
    "    ):\n",
    "        n_trains = n_train + i if update_train else n_train\n",
    "        yield predict_func(x, X[:n_trains], Y[:n_trains])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "4d0f9804",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Predicting step by step: 100%|████████████████| 891/891 [00:11<00:00, 70.54it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 11.3 s, sys: 59.6 ms, total: 11.4 s\n",
      "Wall time: 11.4 s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "gen = predict_array1(X, y, n_train, use_tqdm=True)\n",
    "y_preds, t_preds = apply_stopwatch(gen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "d8546176",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Predicting step by step: 100%|███████████████| 891/891 [00:01<00:00, 755.08it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1.06 s, sys: 9.11 ms, total: 1.07 s\n",
      "Wall time: 1.07 s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "gen = list(predict_array1(X, y, n_train, use_tqdm=True, update_train=False))\n",
    "y_preds_fixedtrain, t_preds_fixedtrain = apply_stopwatch(gen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "bf97f599",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/Users/zuoxu/Library/Python/3.8/lib/python/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score,recall_score, precision_score\n",
    "score_vals = {}\n",
    "for score_f in [accuracy_score, recall_score, precision_score]:\n",
    "    score_name = score_f.__name__\n",
    "    preds = y_preds\n",
    "    score_vals[score_name] = [score_f(y_test[:i], preds[:i]) for i in range(1, len(preds))]\n",
    "    \n",
    "    score_name = score_f.__name__ + '_fixedtrain'\n",
    "    preds = y_preds_fixedtrain\n",
    "    score_vals[score_name] = [score_f(y_test[:i], preds[:i]) for i in range(1, len(preds))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "62e93755",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x1200 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.rcParams['figure.facecolor'] = (1,1,1,1)  # Replace default \"transparent\" background of the figure with the \"white\" one\n",
    "\n",
    "\n",
    "fig, axs = plt.subplots(2, 3, figsize=(20, 12))\n",
    "\n",
    "# First two plots are for prediction quality comparison\n",
    "for ax, t in zip(axs[0],['accuracy_score', 'f1_score', 'recall_score' , 'precision_score']):\n",
    "    ax.set_ylim(0-0.05, 1+0.05)\n",
    "    ax.plot(range(n_train+1, len(X)), score_vals[t], label='baseline clf.')\n",
    "    ax.plot(range(n_train+1, len(X)), score_vals[t+'_fixedtrain'], label='baseline clf. (fixed train)')\n",
    "    \n",
    "# The third plot is for prediction speed comparison\n",
    "axs[1,0].plot(range(n_train, len(X)), t_preds, label='baseline clf.')\n",
    "axs[1,0].plot(range(n_train, len(X)), t_preds_fixedtrain, label='baseline clf. (fixed train)')\n",
    "\n",
    "# Add labels and titles to the plots\n",
    "for (ax, t_verb, dim) in zip(axs.flatten(), ['Accuracy score', 'F1 score', 'Recall', \"Precision\", 'Prediction time', ], ['','', '', '','(secs.)',]):\n",
    "    ax.set_title('\\n'.join([f\"{t_verb} progression\", \"w.r.t. the number of train examples\"]), loc='left', size=18)\n",
    "    ax.set_xlabel('# of train examples', loc='right', size=14)\n",
    "    ax.set_ylabel(f\"{t_verb} {dim}\".strip(), loc='top', size=14)\n",
    "    ax.legend()\n",
    "    \n",
    "# Drop the predefined fourth plot since we do not use it\n",
    "axs[1,1].set_axis_off()    \n",
    "\n",
    "# Some postprocessing of plots\n",
    "plt.tight_layout()\n",
    "plt.subplots_adjust()\n",
    "\n",
    "plt.savefig('Classifier_comparison.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "293cb605",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "75.64"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Lazy FCA_numpy\n",
    "acc_fca = round(sum(score_vals['accuracy_score'])/len(score_vals['accuracy_score'])*100,2)\n",
    "acc_fca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "60447db3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "81.4"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pre_fca = round(sum(score_vals['precision_score'])/len(score_vals['precision_score'])*100,2)\n",
    "pre_fca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "32880d75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "49.07"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rec_fca = round(sum(score_vals['recall_score'])/len(score_vals['recall_score'])*100,2)\n",
    "rec_fca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11ae346e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Comparison with other ML methods"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "id": "6c023a11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((891, 10), (891,), (418, 10))"
      ]
     },
     "execution_count": 343,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train = train_df.drop(\"Survived\",axis=1)\n",
    "Y_train = train_df[\"Survived\"]\n",
    "X_test = test_df.drop(\"PassengerId\",axis=1).copy()\n",
    "X_train.shape,Y_train.shape,X_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "b74e2e4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "82.15"
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Logistic Regression\n",
    "logreg = LogisticRegression()\n",
    "logreg.fit(X_train,Y_train)\n",
    "Y_pred_logreg = logreg.predict(X_test)\n",
    "acc_log = round(logreg.score(X_train,Y_train)*100,2)\n",
    "acc_log"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "id": "282d021a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision_score 0.7602523659305994\n",
      "recall_score 0.7046783625730995\n"
     ]
    }
   ],
   "source": [
    "log_pred_train = cross_val_predict(logreg, X_train, Y_train, cv = 3)\n",
    "print('precision_score',precision_score(Y_train, log_pred_train ))\n",
    "print('recall_score',recall_score(Y_train, log_pred_train ))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "84a42922",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "83.28"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Support Vector Machines\n",
    "\n",
    "svc = SVC()\n",
    "svc.fit(X_train, Y_train)\n",
    "Y_pred_svc = svc.predict(X_test)\n",
    "acc_svc = round(svc.score(X_train, Y_train) * 100, 2)\n",
    "acc_svc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "id": "841fc7d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision_score 0.8131147540983606\n",
      "recall_score 0.7251461988304093\n"
     ]
    }
   ],
   "source": [
    "svc_clf_pred_train = cross_val_predict(svc, X_train, Y_train, cv = 3)\n",
    "print('precision_score',precision_score(Y_train, svc_clf_pred_train ))\n",
    "print('recall_score',recall_score(Y_train, svc_clf_pred_train ))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "f3d1b2d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "85.3"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# KNN\n",
    "knn = KNeighborsClassifier(n_neighbors = 3)\n",
    "knn.fit(X_train, Y_train)\n",
    "Y_pred_knn = knn.predict(X_test)\n",
    "acc_knn = round(knn.score(X_train, Y_train) * 100, 2)\n",
    "acc_knn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "id": "d86e68cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision_score 0.8156028368794326\n",
      "recall_score 0.672514619883041\n"
     ]
    }
   ],
   "source": [
    "Y_train_pred_knn = cross_val_predict(knn_clf, X_train, Y_train, cv = 3)\n",
    "print('precision_score',precision_score(Y_train, Y_train_pred_knn))\n",
    "print('recall_score',recall_score(Y_train, Y_train_pred_knn))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "id": "89a37c0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "88.78"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Decision Tree\n",
    "\n",
    "decision_tree = DecisionTreeClassifier()\n",
    "decision_tree.fit(X_train, Y_train)\n",
    "Y_pred_decision_tree = decision_tree.predict(X_test)\n",
    "acc_decision_tree = round(decision_tree.score(X_train, Y_train) * 100, 2)\n",
    "acc_decision_tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "id": "bbf3287f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision_score 0.7919463087248322\n",
      "recall_score 0.6900584795321637\n"
     ]
    }
   ],
   "source": [
    "DT_clf_pred_train = cross_val_predict(decision_tree, X_train, Y_train, cv = 3)\n",
    "print('precision_score',precision_score(Y_train, DT_clf_pred_train ))\n",
    "print('recall_score',recall_score(Y_train, DT_clf_pred_train ))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 361,
   "id": "40a8c184",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Random Forest\n",
    "from sklearn.model_selection import cross_val_predict\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "id": "b7a0e907",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8271785268414481"
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "forest_clf = RandomForestClassifier(random_state=42)\n",
    "forest_clf.fit(X_train, Y_train)\n",
    "cross_forest_score = cross_val_score(forest_clf, X_train, Y_train, cv = 10, scoring = 'accuracy')\n",
    "cross_forest_score.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "id": "03f92b45",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision_score 0.8006535947712419\n",
      "recall_score 0.716374269005848\n"
     ]
    }
   ],
   "source": [
    "Y_train_pred_forest = cross_val_predict(forest_clf, X_train, Y_train, cv = 3)\n",
    "print('precision_score',precision_score(Y_train, Y_train_pred_forest))\n",
    "print('recall_score',recall_score(Y_train, Y_train_pred_forest))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "abc55447",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9ece31f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68686c00",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f06b640",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
